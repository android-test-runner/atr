// Code generated by MockGen. DO NOT EDIT.
// Source: result/json_formatter.go

// Package mock_result is a generated GoMock package.
package mock_result

import (
	gomock "github.com/golang/mock/gomock"
	devices "github.com/ybonjour/atr/devices"
	files "github.com/ybonjour/atr/files"
	result "github.com/ybonjour/atr/result"
	reflect "reflect"
)

// MockJsonFormatter is a mock of JsonFormatter interface
type MockJsonFormatter struct {
	ctrl     *gomock.Controller
	recorder *MockJsonFormatterMockRecorder
}

// MockJsonFormatterMockRecorder is the mock recorder for MockJsonFormatter
type MockJsonFormatterMockRecorder struct {
	mock *MockJsonFormatter
}

// NewMockJsonFormatter creates a new mock instance
func NewMockJsonFormatter(ctrl *gomock.Controller) *MockJsonFormatter {
	mock := &MockJsonFormatter{ctrl: ctrl}
	mock.recorder = &MockJsonFormatterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJsonFormatter) EXPECT() *MockJsonFormatterMockRecorder {
	return m.recorder
}

// FormatResults mocks base method
func (m *MockJsonFormatter) FormatResults(arg0 map[devices.Device]result.TestResults) (files.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FormatResults", arg0)
	ret0, _ := ret[0].(files.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FormatResults indicates an expected call of FormatResults
func (mr *MockJsonFormatterMockRecorder) FormatResults(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FormatResults", reflect.TypeOf((*MockJsonFormatter)(nil).FormatResults), arg0)
}
